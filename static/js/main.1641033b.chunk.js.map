{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","disabledForward","disabledBack","index","scrollForward","props","images","frameSize","step","infinite","lastStep","length","setState","prev","scrollBack","this","itemWidth","animationDuration","className","style","width","map","image","i","counter","transform","transition","src","alt","type","onClick","disabled","React","Component","App","isInfinite","changeItemWidth","value","changeFrameSize","changeStep","changeAnimationDuration","disableInfinite","name","min","max","defaultValue","onChange","target","htmlFor","defaultChecked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1641033b.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  disabledForward: boolean,\n  disabledBack: boolean,\n  index: number,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    disabledForward: false,\n    disabledBack: true,\n    index: 0,\n  };\n\n  scrollForward = () => {\n    const {\n      images,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const { index } = this.state;\n\n    const lastStep = images.length - frameSize;\n\n    if (index < images.length - step) {\n      this.setState((prev) => ({\n        index: prev.index + step,\n      }));\n    }\n\n    if (!infinite && index + step >= lastStep) {\n      this.setState({ index: lastStep });\n      this.setState({ disabledForward: true });\n    }\n\n    if (infinite) {\n      if (index + step > lastStep\n        && index !== lastStep) {\n        this.setState({ index: lastStep });\n      }\n\n      if (index === lastStep) {\n        this.setState({ index: 0 });\n      }\n    }\n\n    this.setState({ disabledBack: false });\n  };\n\n  scrollBack = () => {\n    const {\n      images,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const { index } = this.state;\n\n    if (index > step) {\n      this.setState((prev) => ({\n        index: prev.index - step,\n      }));\n    }\n\n    if (index <= step && index !== 0) {\n      this.setState({ index: 0 });\n\n      if (!infinite) {\n        this.setState({ disabledBack: true });\n      }\n    }\n\n    if (infinite && index === 0) {\n      this.setState({ index: images.length - frameSize });\n    }\n\n    this.setState({ disabledForward: false });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          {images.map((image, i) => {\n            const counter = i;\n\n            return (\n              <li\n                key={`${image}__${counter}`}\n                style={{\n                  transform: `translateX(-${this.state.index * 100}%)`,\n                  transition: `${animationDuration}ms`,\n                }}\n              >\n                <img\n                  src={image}\n                  alt={`${i}`}\n                  style={{ width: `${itemWidth}px` }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__button-box\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.scrollBack}\n            disabled={this.state.disabledBack}\n          >\n            Prev\n          </button>\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.scrollForward}\n            disabled={this.state.disabledForward}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  isInfinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    isInfinite: false,\n  };\n\n  changeItemWidth = (value: number) => {\n    this.setState({ itemWidth: value });\n  };\n\n  changeFrameSize = (value: number) => {\n    this.setState({ frameSize: value });\n  };\n\n  changeStep = (value: number) => {\n    this.setState({ step: value });\n  };\n\n  changeAnimationDuration = (value: number) => {\n    this.setState({ animationDuration: value });\n  };\n\n  disableInfinite = () => {\n    return this.state.isInfinite\n      ? this.setState({ isInfinite: false })\n      : this.setState({ isInfinite: true });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      step,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={this.state.isInfinite}\n        />\n\n        <div className=\"App__container\">\n          <div className=\"App__input-box\">\n            <span className=\"App__input-text\">Emoji size</span>\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              min=\"50\"\n              max=\"300\"\n              step=\"10\"\n              defaultValue={itemWidth}\n              onChange={({ target }) => {\n                this.changeItemWidth(+target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"App__input-box\">\n            <span className=\"App__input-text\">Carousel width</span>\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={frameSize}\n              onChange={({ target }) => {\n                this.changeFrameSize(+target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"App__input-box\">\n            <span className=\"App__input-text\">Step</span>\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"step\"\n              min=\"1\"\n              max=\"9\"\n              defaultValue={step}\n              onChange={({ target }) => {\n                this.changeStep(+target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"App__input-box\">\n            <span className=\"App__input-text\">Scrolling duration</span>\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              min=\"0\"\n              max=\"10000\"\n              step=\"100\"\n              defaultValue={animationDuration}\n              onChange={({ target }) => {\n                this.changeAnimationDuration(+target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"App__input-box\">\n            <label htmlFor=\"disabled\" className=\"App__input-text\">\n              Infinite scroll\n            </label>\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              name=\"disabled\"\n              onClick={this.disableInfinite}\n              defaultChecked={this.state.isInfinite}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}